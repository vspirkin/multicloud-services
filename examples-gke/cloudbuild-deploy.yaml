steps:
- id: 'Deploy Genesys services in GKE'
  name: 'gcr.io/gcpe0003/privateedition'
  timeout: '3600s'
  env:
    - 'VGCPPROJECT=${_VGCPPROJECT}'
    - 'VGCPREGION=${_VGCPREGION}'
    - 'VGKECLUSTER=${_VGKECLUSTER}'

    - 'DOMAIN=${_VDOMAIN}'
    - 'FULLCOMMAND=${_VHELMCOMMAND}'
    - 'IMAGE_REGISTRY=${_VIMAGEREGISTRY}'
    - 'VARTIFACTREPO=${_VARTIFACTREPO}'
    - 'SERVICE=${_VSERVICE}'
    - 'NS=${_VNAMESPACE}'


  script: |
    echo "*********************************************"

    echo "** K8s login"
    gcloud init --no-launch-browser
    gcloud container clusters get-credentials $VGKECLUSTER --region $VGCPREGION --project $VGCPPROJECT

    echo "*** Helm repo add:"
    helm repo add --force-update helm_repo ${{ env.HELM_REGISTRY }}${{ github.event.inputs.helmrepo }} \
          --username ${{ env.HELM_REGISTRY_USER }} --password ${{ env.HELM_REGISTRY_TOKEN }}

    echo "*** Parse Command"
    COMMAND=$(echo $FULLCOMMAND | cut -d' ' -f1)
    if [[ "$FULLCOMMAND" == *" "* ]]; then
      CHART_NAME=$(echo $FULLCOMMAND | tr -s ' ' | cut -d' ' -f2)
      RL_NAME=$(echo $FULLCOMMAND | tr -s ' ' | cut -d' ' -f3)
    fi

    echo "*** Determine target namespace"
    # By default (if namespace not defined) we install in namespace=service_name
        if [ -z "$NS" ] ; then
          NS=${{ github.event.inputs.service }}
          [[ $SV == "tenant" ]] && NS="voice"  # Tenant is exception, we deploy it in voice namespace by default
        fi
    if ! kubectl get namespace $NS; then
        echo "Namespace $NS does not exist. Creating it.."
        kubectl create namespace $NS
    else
        echo "Namespace $NS already exists. Will use it."
    fi
    kubectl config set-context --current --namespace=$NS

    echo "*********************************************"
    echo "*** Service deployment"
    pwd
    ls -lart

    source .github/scripts/deployment.sh


  

timeout: '3600s'
options:
  logging: CLOUD_LOGGING_ONLY